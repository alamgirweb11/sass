@import "partials/functions";
@import "partials/variables";
@import "partials/mixins";

@include google-font("Alegreya+Sans");
@include google-font("Titllium+Web");

// declaration of for loop
// 1. @for $var-name from initial value to end value
// 2. @for $var-name from initial value through end last index

// print 1-4 syntax
// first method of for loop
@for $i from 1 to 5{
      .col-#{$i}{
           width: $i * 2em;
      }
}

// print 1-5 syntax
// second method of for loop
@for $j from 1 through 5{
     .col-#{$j}{
          width:  $j * 10px;
     }
}

// foreach loop called each loop in sass
//example of each loop without key value pair
// for client section load client images
$clients: fahim, fahat, rahat, rohan, rojan;
@each $client in $clients{
      .#{$client}-profile-img{
          background-image: url('./img/#{$client}.jpg');
      }
}

// set device wise font size with key value pair
$font-sizes: (tiny: 8px, small: 12px, medium: 16px, large: 18px);
@each $device, $font-size in $font-sizes{
       .#{$device}{
            font-size: $font-size;
       }
}

// declare public
@include fancy-links();

// set value for ie-6
@include apply-to-ie-6 {
  body {
    font-size: 125%;
  }
}

// declare variable for conditional directives
$contrast: high;

body {
  // change theme color
  background-color: $body-background-color;
  font-family: $text-font;
  // use of user define functions
  font-size: em(18px);
  @include large-screens {
    font-size: 125%;
  }
}

h1,
h2,
h3,
h4 {
  font-family: $headline-font;
  color: $text-color;
}

h2 {
  @include large-text;
}

p {
  font-family: $text-font;
  color: $text-color;
}

a {
  color: $link-color;
  @include blue-beans{
      color: #8779ff;
  }
  &:hover {
    color: darken($link-color, 15%);
  }
}

.warning-button {
  @include warning;
  padding: 8px 12px;
  border: none;
  &:hover {
    //  lighten() built in function
    background-color: lighten($color: #faa301, $amount: 10%);
  }
}

#header {
  // set parameter
  @include box($radius: 12px, $border: 1px solid #999);
  // set parameter for multiple value
  @include box-shadow(1px 0px 4px #999, 1px 1px 6px $secondary-color);
  height: $header-height;
  background-color: $theme-color;

  #main-menu {
    li {
      display: inline;
      list-style: none;
    }
    a {
      color: $menu-item-color;
      padding: 6px 8px;
      //  transparentize() built in function
      border-bottom: 1px solid transparentize($color: #fefefe, $amount: 1);
      transition: border-bottom 0.5s;
      transition-timing-function: ease-in-out;
      &:hover {
        border-bottom: 1px solid opacify($color: #fefefe, $amount: 0.5);
      }
    }
  }

  #logo {
  }
}

#main {
  @include large-screens {
    width: auto;
    max-width: $content-width;
  }
  width: $content-width;
  margin-left: auto;
  margin-right: auto;

  #content {
    float: left;
    width: 6 * $col;
  }
  // use of inheritance
  .special-block {
    border: 2px dashed #999;
  }
  // inherit class from mixins
  .italic-text {
    @include italic-text;
  }
  // if class is not exists, for ignore this class use !optional and don't get any error
  .third-para {
    @extend .special-block;
    @extend .italic-text;
    // example-class is not exists !optional use for ignore this
    @extend .example-class !optional;
    color: #faa301;
    padding: 8px;
    font-weight: bolder;
  }
  #sidebar {
    float: right;
    width: 2 * $col;
    li {
      list-style-type: none;
      padding: em(16px) em(20px);
      border-bottom: 1px dashed #999;
      color: $text-color;
      &:hover {
        background-color: #efefef;
        color: $text-hover-color;
      }
    }
  }
}

#footer {
  clear: both;
  height: $footer-height;
  background-color: $ternary-color;
  @include rogers-rovers{
        border-top: 5px solid darken($ternary-color, 15%);
  }
}
